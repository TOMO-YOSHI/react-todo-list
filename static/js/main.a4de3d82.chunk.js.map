{"version":3,"sources":["components/DatePicker/DatePicker.component.jsx","components/TextField/TextField.component.jsx","components/SelectField/SelectField.component.jsx","components/Button/Button.component.jsx","components/InputArea/InputArea.component.jsx","components/Modal/Modal.component.jsx","components/Header/Header.component.jsx","components/EditArea/EditArea.component.jsx","components/EditModal/EditModal.component.jsx","components/InteractiveList/InteractiveList.component.jsx","components/NoTodo/NoTodoï¼Žcomponent.jsx","components/OutputArea/OutputArea.component.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","createStyles","input","textAlign","color","MaterialUIPickers","props","React","useState","Date","selectedDate","setSelectedDate","useEffect","change","value","classes","utils","DateFnsUtils","className","disableToolbar","variant","format","margin","id","label","onChange","event","KeyboardButtonProps","name","theme","root","spacing","width","BasicTextFields","noValidate","autoComplete","TextField","priorities","marginTop","MultilineTextFields","priority","setPriority","select","target","map","option","MenuItem","key","button","backgroundColor","IconLabelButtons","Button","size","startIcon","onClick","click","todo","text","InputArea","dueDate","setInput","onChangeHandler","setId","getTime","addTodo","modal","display","alignItems","justifyContent","paper","palette","background","border","boxShadow","shadows","padding","TransitionsModal","open","modalOpen","IconButton","aria-label","handleOpen","Modal","aria-labelledby","aria-describedby","onClose","handleClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Header","EditArea","edit","setEdit","newTodoList","todoList","editIndex","findIndex","editTodoId","editTodo","EditModal","editModalOpen","data-todoid","todoId","handleEditOpen","handleEditClose","flexGrow","maxWidth","demo","title","div","listItem","InteractiveList","dense","secondary","Grid","item","xs","md","length","index","date","getDate","month","getMonth","year","getFullYear","List","ListItem","ListItemText","primary","ListItemSecondaryAction","edge","deleteTodo","NoTodo","OutputArea","App","state","todoInput","push","setState","alert","console","log","newTodo","splice","closest","dataset","todoid","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"yZAUMA,EAAYC,aAAW,kBAC3BC,YAAa,CACXC,MAAO,CACH,UAAY,CACZC,UAAW,SACXC,MAAO,aAOA,SAASC,EAAkBC,GAAO,MAUPC,IAAMC,SAAS,IAAIC,MAVZ,mBAUxCC,EAVwC,KAU1BC,EAV0B,KAiB/CC,qBAAU,WACRN,EAAMO,OAAO,UAAWH,KACvB,IAEHE,qBAAU,WACJN,EAAMQ,OACRH,EAAgBL,EAAMQ,UAI1B,IAAMC,EAAUhB,IAEhB,OACE,kBAAC,IAAD,CAAyBiB,MAAOC,KAC9B,kBAAC,IAAD,CACEC,UAAWH,EAAQb,MACnBiB,gBAAc,EACdC,QAAQ,SACRC,OAAO,aACPC,OAAO,SACPC,GAAG,qBACHC,MAAM,wBACNV,MAAOJ,EACPe,SA5BmB,SAACC,GACxBf,EAAgBe,GAChBpB,EAAMO,OAAO,UAAWa,IA2BpBC,oBAAqB,CACnB,aAAc,eAEhBC,KAAK,a,aC9DP7B,EAAYC,aAAW,SAAC6B,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPR,OAAQO,EAAME,QAAQ,GACtBC,MAAO,aAKE,SAASC,EAAgB3B,GACtC,IAAMS,EAAUhB,IAEhB,OACE,0BAAMmB,UAAWH,EAAQe,KAAMI,YAAU,EAACC,aAAa,OACrD,kBAACC,EAAA,EAAD,CAAWR,KAAK,OAAOL,GAAG,iBAAiBC,MAAM,oBAAoBC,SAAUnB,EAAMO,OAAQC,MAAOR,EAAMQ,S,aCb1GuB,EAAa,CACjB,CACEvB,MAAO,EACPU,MAAO,KAET,CACEV,MAAO,EACPU,MAAO,KAET,CACEV,MAAO,EACPU,MAAO,KAET,CACEV,MAAO,EACPU,MAAO,MAILzB,EAAYC,aAAW,SAAC6B,GAAD,MAAY,CACvCC,KAAM,CACJ,uBAAwB,CACtBR,OAAQO,EAAME,QAAQ,GACtBO,UAAW,OACXN,MAAO,aAKE,SAASO,EAAoBjC,GAC1C,IAAMS,EAAUhB,IADiC,EAEjBQ,IAAMC,SAAS,IAFE,mBAE1CgC,EAF0C,KAEhCC,EAFgC,KAgBjD,OAPA7B,qBAAU,WACJN,EAAMQ,OACR2B,EAAYnC,EAAMQ,UAMpB,0BAAMI,UAAWH,EAAQe,KAAMI,YAAU,EAACC,aAAa,OACrD,6BACE,kBAACC,EAAA,EAAD,CACER,KAAK,WACLL,GAAG,2BACHmB,QAAM,EACNlB,MAAM,WACNV,MAAO0B,EACPf,SArBa,SAACC,GACpBe,EAAYf,EAAMiB,OAAO7B,OACzBR,EAAMO,OAAOa,KAsBNW,EAAWO,KAAI,SAACC,GAAD,OACd,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAO/B,MAAOA,MAAO+B,EAAO/B,OACxC+B,EAAOrB,a,8BC3DhBzB,EAAYC,aAAW,SAAC6B,GAAD,MAAY,CACvCmB,OAAQ,CACN1B,OAAQO,EAAME,QAAQ,GACtB3B,MAAO,QACP6C,gBAAiB,UACjBjB,MAAO,YAII,SAASkB,EAAiB5C,GACvC,IAAMS,EAAUhB,IAEhB,OACE,6BACE,kBAACoD,EAAA,EAAD,CACE/B,QAAQ,YACRgC,KAAK,QACLlC,UAAWH,EAAQiC,OACnBK,UAAW,kBAAC,IAAD,MACXC,QAAS,SAAC5B,GACRpB,EAAMiD,MAAMjD,EAAMkD,QAGnBlD,EAAMmD,O,WCmBAC,EAtCG,SAACpD,GAAW,IAAD,EAEzBE,mBAAS,CACPmD,QAAS,GACT/B,KAAM,GACNY,SAAU,KALa,mBAClBtC,EADkB,KACX0D,EADW,KASnBC,EAAkB,SAACnC,GAAW,IAAD,EACTA,EAAMiB,OAArB7B,EADwB,EACxBA,MAAOc,EADiB,EACjBA,KAEdgC,EAAS,2BAAI1D,GAAL,kBAAa0B,EAAOd,MAgBhC,OACE,yBAAKI,UAAU,aACb,kBAAC,EAAD,CAAYL,OAfQ,SAACe,EAAMd,GAC3B8C,EAAS,2BAAK1D,GAAN,kBAAc0B,EAAOd,MAcQgD,MAX3B,WACV,IAAMvC,GAAK,IAAId,MAAOsD,UACtBH,EAAS,2BAAK1D,GAAN,IAAaqB,GAAIA,QAUzB,kBAAC,EAAD,CAAWV,OAAQgD,IACnB,kBAAC,EAAD,CAAahD,OAAQgD,IACrB,kBAAC,EAAD,CAAQN,MAAOjD,EAAM0D,QAASR,KAAMtD,EAAOuD,KAAK,W,qDC/BlD1D,EAAYC,aAAW,SAAC6B,GAAD,MAAY,CACvCoC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLpB,gBAAiBpB,EAAMyC,QAAQC,WAAWF,MAC1CG,OAAQ,oBACRC,UAAW5C,EAAM6C,QAAQ,GACzBC,QAAS9C,EAAME,QAAQ,EAAG,EAAG,IAE/BD,KAAM,CACJ,QAAS,CACPR,OAAQO,EAAME,QAAQ,SAKb,SAAS6C,EAAiBtE,GACvC,IAAMS,EAAUhB,IACV8E,EAAOvE,EAAMwE,UAEnB,OACE,yBAAK5D,UAAU,eACb,kBAAC6D,EAAA,EAAD,CAAYC,aAAW,SAAS1B,QAAShD,EAAM2E,YAC7C,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CACEC,kBAAgB,yBAChBC,mBAAiB,+BACjBlE,UAAWH,EAAQkD,MACnBY,KAAMA,EACNQ,QAAS/E,EAAMgF,YACfC,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACbC,QAAS,MAGX,kBAACC,EAAA,EAAD,CAAMC,GAAIhB,GACR,yBAAK3D,UAAWH,EAAQsD,OACtB,wBAAI9C,GAAG,0BAAP,mBACA,yBAAKA,GAAG,gCACN,kBAAC,EAAD,CACEyC,QAAS1D,EAAM0D,e,WChChB8B,EAPA,SAACxF,GACZ,OACE,yBAAKY,UAAU,UACb,mD,8DCsDO6E,G,OAjEE,SAACzF,GAAW,IAAD,EAExBE,mBAAS,CACPmD,QAAS,GACT/B,KAAM,GACNY,SAAU,KALY,mBACjBwD,EADiB,KACXC,EADW,KAcxBrF,qBAAU,WACR,IAAIsF,EAAc5F,EAAM6F,SACpBC,EAAYF,EAAYG,WAC1B,SAAC7C,GAAD,OAAUA,EAAKjC,IAAMjB,EAAMgG,cAE7BL,EAAQC,EAAYE,MAInB,IAEH,IAMMvC,EAAkB,SAACnC,GAAW,IAAD,EACTA,EAAMiB,OAArB7B,EADwB,EACxBA,MAAOc,EADiB,EACjBA,KAEdqE,EAAQ,2BAAID,GAAL,kBAAYpE,EAAOd,MAgB9B,OACE,yBAAKI,UAAU,YACb,kBAAC,EAAD,CAAYL,OAfQ,SAACe,EAAMd,GAC3BmF,EAAQ,2BAAKD,GAAN,kBAAapE,EAAOd,MAcUA,MAAOkF,EAAKrC,UACjD,kBAAC,EAAD,CAAW9C,OAAQgD,EAAiB/C,MAAOkF,EAAKpE,OAChD,kBAAC,EAAD,CAAaf,OAAQgD,EAAiB/C,MAAOkF,EAAKxD,WAClD,kBAAC,EAAD,CACEe,MA/BgB,SAACyC,GAGrB1F,EAAMiG,SAASP,EAAM1F,EAAMgG,aA6BvB9C,KAAMwC,EACNvC,KAAK,OACL6C,WAAYhG,EAAMgG,gB,iBCzDtBvG,GAAYC,aAAW,SAAC6B,GAAD,MAAY,CACvCoC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLpB,gBAAiBpB,EAAMyC,QAAQC,WAAWF,MAC1CG,OAAQ,oBACRC,UAAW5C,EAAM6C,QAAQ,GACzBC,QAAS9C,EAAME,QAAQ,EAAG,EAAG,IAE/BD,KAAM,CACJ,QAAS,CACPR,OAAQO,EAAME,QAAQ,SAKb,SAASyE,GAAUlG,GAChC,IAAMS,EAAUhB,KACV8E,EAAOvE,EAAMmG,cAEnB,OACE,yBAAKvF,UAAU,cAAcwF,cAAapG,EAAMqG,QAC9C,kBAAC5B,EAAA,EAAD,CAAYC,aAAW,SAAS1B,QAAShD,EAAMsG,gBAC7C,kBAAC,IAAD,OAEF,kBAAC1B,EAAA,EAAD,CACEC,kBAAgB,yBAChBC,mBAAiB,+BACjBlE,UAAWH,EAAQkD,MACnBY,KAAMA,EACNQ,QAAS/E,EAAMuG,gBACftB,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACbC,QAAS,MAGX,kBAACC,EAAA,EAAD,CAAMC,GAAIhB,GACR,yBAAK3D,UAAWH,EAAQsD,OACtB,wBAAI9C,GAAG,0BAAP,kBACA,yBAAKA,GAAG,gCACN,kBAAC,EAAD,CACE4E,SAAU7F,EAAM6F,SAChBI,SAAUjG,EAAMiG,SAChBD,WAAYhG,EAAMgG,kB,WC5C5BvG,GAAYC,aAAW,SAAC6B,GAAD,MAAY,CACvCC,KAAM,CACJgF,SAAU,EACVC,SAAU,KAEZC,KAAM,CACJ/D,gBAAiBpB,EAAMyC,QAAQC,WAAWF,OAE5C4C,MAAO,CACL3F,OAAQO,EAAME,QAAQ,EAAG,EAAG,IAE9BmF,IAAI,aACF5F,OAAQ,YACRqD,QAAS,UACJ,2BAA6B,CAChC3C,MAAO,MACP+E,SAAU,UAGdI,SAAU,CACR,qBAAsB,mEACtB,kBAAmB,mEACnB,aAAc,mEACd,gBAAiB,WAQN,SAASC,GAAgB9G,GACtC,IAAMS,EAAUhB,KAD6B,EAEnBQ,IAAMC,UAAS,GAFI,mBAEtC6G,EAFsC,aAGX9G,IAAMC,UAAS,IAHJ,mBAGtC8G,EAHsC,KAKvCnB,GALuC,KAK/B,YAAO7F,EAAM6F,WAG3B,OACE,kBAACoB,EAAA,EAAD,CAAMrG,UAAWH,EAAQmG,IAAKM,MAAI,EAACC,GAAI,GAAIC,GAAI,GAC7C,yBAAKxG,UAAWH,EAAQiG,MAEpBb,EAASwB,OACPxB,EAASvD,KAAI,SAACY,EAAMoE,GAChB,IAYIpF,EAZEqF,EACJrE,EAAKG,QAAQmE,UAAY,GACrB,IAAMtE,EAAKG,QAAQmE,UACnBtE,EAAKG,QAAQmE,UAEbC,EACJvE,EAAKG,QAAQqE,WAAa,EAAI,GAC1B,KAAOxE,EAAKG,QAAQqE,WAAa,GACjCxE,EAAKG,QAAQqE,WAAa,EAE1BC,EAAOzE,EAAKG,QAAQuE,cAG1B,OAAO1E,EAAKhB,UACR,KAAK,EACDA,EAAW,IACX,MACJ,KAAK,EACDA,EAAW,IACX,MACJ,KAAK,EACDA,EAAW,IACX,MACJ,KAAK,EACDA,EAAW,IAQnB,OACE,kBAAC2F,EAAA,EAAD,CAAMd,MAAOA,EAAOtE,IAAKS,EAAKjC,IAC5B,kBAAC6G,EAAA,EAAD,CAAUlH,UAAWH,EAAQoG,UAC3B,kBAACX,GAAD,CACEG,OAAQnD,EAAKjC,GACb4E,SAAUA,EACVM,cAAenG,EAAMmG,cACrBF,SAAUjG,EAAMiG,SAChBD,WAAYhG,EAAMgG,WAClBM,eAAgBtG,EAAMsG,eACtBC,gBAAiBvG,EAAMuG,kBAGzB,kBAACwB,EAAA,EAAD,CACEC,QACE,2BACGP,EADH,IACWF,EADX,IACkBI,EADlB,MAC2BzE,EAAK5B,KADhC,MACyCY,GAG3C8E,UAAWA,EAAY,iBAAmB,OAE5C,kBAACiB,EAAA,EAAD,KACE,kBAACxD,EAAA,EAAD,CACEyD,KAAK,MACLxD,aAAW,SACX1B,QAAS,kBAAMhD,EAAMmI,WAAWb,KAEhC,kBAAC,IAAD,aAMZ,O,WC/GCc,GATA,WACX,OACI,yBAAKxH,UAAU,aACX,mDACA,uDCmBGyH,I,OApBI,SAACrI,GAClB,OACE,yBAAKY,UAAU,cACZZ,EAAM6F,SAASwB,OAAS,EACvB,kBAACP,GAAD,CACEjB,SAAU7F,EAAM6F,SAChBI,SAAUjG,EAAMiG,SAChBD,WAAYhG,EAAMgG,WAClBmC,WAAYnI,EAAMmI,WAClBhC,cAAenG,EAAMmG,cACrBG,eAAgBtG,EAAMsG,eACtBC,gBAAiBvG,EAAMuG,kBAGzB,kBAAC,GAAD,SCkGO+B,G,4MA/GbC,MAAQ,CACN1C,SAAU,CACR,CACExC,QAAS,IAAIlD,KACbmB,KAAM,gBACNY,SAAU,EACVjB,GAAI,WAEN,CACEoC,QAAS,IAAIlD,KACbmB,KAAM,gBACNY,SAAU,EACVjB,GAAI,WAGRuD,WAAW,EACX2B,eAAe,EACfH,WAAY,I,EAGdtC,QAAU,SAACR,GACT,IAAIsF,EAAS,2BAAQtF,GAAR,IAAcjC,IAAI,IAAId,MAAOsD,YAE1C,GAAKP,EAAK5B,MAAS4B,EAAKG,SAAYH,EAAKhB,SAElC,CACL,IAAI2D,EAAW,EAAK0C,MAAM1C,SAC1BA,EAAS4C,KAAKD,GACd,EAAKE,SAAS,CAAE7C,SAAUA,IAC1B,EAAKb,mBALL2D,MAAM,gC,EASV1C,SAAW,SAAC/C,EAAMjC,GAChB,GAAKiC,EAAK5B,MAAS4B,EAAKG,SAAYH,EAAKhB,SAElC,CACL,IAAI0D,EAAc,EAAK2C,MAAM1C,SACzByB,EAAQ1B,EAAYG,WAAU,SAAC7C,GAAD,OAAUA,EAAKjC,IAAMA,KAEvD2H,QAAQC,IAAI,QAASvB,EAAOrG,GAE5B,IAAI6H,EAAO,2BAAQ5F,GAAR,IAAcjC,GAAIA,IAE7B2E,EAAY0B,GAASwB,EACrB,EAAKJ,SAAS,CAAE7C,SAAUD,IAC1B,EAAKW,uBAXLoC,MAAM,gC,EAeVR,WAAa,SAACb,GACZ,IAAIzB,EAAW,EAAK0C,MAAM1C,SAC1BA,EAASkD,OAAOzB,EAAO,GACvB,EAAKoB,SAAS,CAAE7C,SAAUA,K,EAG5BlB,WAAa,WACX,EAAK+D,SAAS,CAAElE,WAAW,K,EAG7BQ,YAAc,WACZ,EAAK0D,SAAS,CAAElE,WAAW,K,EAG7B8B,eAAiB,SAAClF,GAChB,IAAIiF,EAASjF,EAAMiB,OAAO2G,QAAQ,gBAAgBC,QAAQC,OAC1DN,QAAQC,IAAIxC,GACZ,EAAKqC,SAAS,CACZvC,eAAe,EACfH,WAAYK,K,EAIhBE,gBAAkB,WAChB,EAAKmC,SAAS,CAAEvC,eAAe,K,mEAGX,IAAD,EACnByC,QAAQC,IAAI,iBACZ,EAAAD,SAAQC,IAAR,oBAAeM,KAAKZ,MAAM1C,a,+BAI1B,OACE,yBAAKjF,UAAU,OACb,kBAAC,EAAD,MAMA,kBAAC,GAAD,CACEiF,SAAUsD,KAAKZ,MAAM1C,SACrBI,SAAUkD,KAAKlD,SACfD,WAAYmD,KAAKZ,MAAMvC,WACvBmC,WAAYgB,KAAKhB,WACjBhC,cAAegD,KAAKZ,MAAMpC,cAC1BG,eAAgB6C,KAAK7C,eACrBC,gBAAiB4C,KAAK5C,kBAExB,kBAACjC,EAAD,CACEZ,QAASyF,KAAKzF,QACdc,UAAW2E,KAAKZ,MAAM/D,UACtBG,WAAYwE,KAAKxE,WACjBK,YAAamE,KAAKnE,mB,GAzGV/E,IAAMmJ,WCKJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAEL,kBAAC,GAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzB,QAAQyB,MAAMA,EAAMC,a","file":"static/js/main.a4de3d82.chunk.js","sourcesContent":["import \"date-fns\";\nimport React,{ useEffect } from \"react\";\n// import Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    input: {\n        \"&:input\" : {\n        textAlign: 'center',\n        color: \"red\"\n        }\n    },\n  })\n);\n\n\nexport default function MaterialUIPickers(props) {\n  // The first commit of Material-UI\n  // console.log(props.value);\n  // let initialValue;\n  //   useEffect(() => {\n  //     if (props.value) {\n  //       initialValue = props.value ? props.value : new Date();\n  //     }\n  //   });\n\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n  const handleDateChange = (event) => {\n    setSelectedDate(event);\n    props.change(\"dueDate\", event);\n  };\n\n  useEffect(()=>{\n    props.change(\"dueDate\", selectedDate);\n  }, [])\n\n  useEffect(()=>{\n    if (props.value) {\n      setSelectedDate(props.value);\n    }\n  })\n\n  const classes = useStyles();\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        className={classes.input}\n        disableToolbar\n        variant=\"inline\"\n        format=\"MM/dd/yyyy\"\n        margin=\"normal\"\n        id=\"date-picker-inline\"\n        label=\"When is the due date?\"\n        value={selectedDate}\n        onChange={handleDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n        name=\"dueDate\"\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"22ch\",\n    },\n  },\n}));\n\nexport default function BasicTextFields(props) {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField name=\"name\" id=\"standard-basic\" label=\"What will you do?\" onChange={props.change} value={props.value} />\n    </form>\n  );\n}\n","import React, {useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst priorities = [\n  {\n    value: 1,\n    label: \"A\",\n  },\n  {\n    value: 2,\n    label: \"B\",\n  },\n  {\n    value: 3,\n    label: \"C\",\n  },\n  {\n    value: 4,\n    label: \"D\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      marginTop: \"1rem\",\n      width: \"22ch\",\n    },\n  },\n}));\n\nexport default function MultilineTextFields(props) {\n  const classes = useStyles();\n  const [priority, setPriority] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setPriority(event.target.value);\n    props.change(event);\n  };\n\n  useEffect(() => {\n    if (props.value) {\n      setPriority(props.value);\n    }\n  });\n\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField\n          name=\"priority\"\n          id=\"standard-select-priority\"\n          select\n          label=\"Priority\"\n          value={priority}\n          onChange={handleChange}\n        //   helperText=\"Please select your currency\"\n        >\n          {priorities.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n    </form>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n    color: \"white\",\n    backgroundColor: \"skyblue\",\n    width: \"22ch\"\n  },\n}));\n\nexport default function IconLabelButtons(props) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        size=\"large\"\n        className={classes.button}\n        startIcon={<SaveIcon />}\n        onClick={(event) => {\n          props.click(props.todo);\n        }}\n      >\n        {props.text}\n      </Button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nimport DatePicker from '../DatePicker/DatePicker.component';\nimport TextField from '../TextField/TextField.component';\nimport SelectField from '../SelectField/SelectField.component';\nimport Button from '../Button/Button.component';\n\nimport './InputArea.styles.scss';\n\nconst InputArea = (props) => {\n    const [input, setInput] = \n    useState({\n      dueDate: \"\",\n      name: \"\",\n      priority: \"\",\n    //   id: \"\",\n    });\n\n    const onChangeHandler = (event) => {\n        const {value, name} = event.target;\n\n        setInput({...input, [name]: value});\n    }\n\n    const getValueHandler = (name, value) => {\n        setInput({ ...input, [name]: value });\n    }\n\n    const setId = () => {        \n        const id = new Date().getTime();\n        setInput({ ...input, id: id });\n    }\n\n    // useEffect(() => {\n    //     console.log(input);\n    // }, [input])\n\n    return (\n      <div className=\"inputArea\">\n        <DatePicker change={getValueHandler} setId={setId} />\n        <TextField change={onChangeHandler} />\n        <SelectField change={onChangeHandler} />\n        <Button click={props.addTodo} todo={input} text=\"Save\" />\n      </div>\n    );\n}\n\nexport default InputArea;","import React from \"react\";\nimport InputArea from '../InputArea/InputArea.component';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid skyblue\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function TransitionsModal(props) {\n  const classes = useStyles();\n  const open = props.modalOpen;\n\n  return (\n    <div className=\"modalButton\">\n      <IconButton aria-label=\"delete\" onClick={props.handleOpen}>\n        <AddIcon />\n      </IconButton>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={props.handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Enter Your Duty</h2>\n            <div id=\"transition-modal-description\">\n              <InputArea \n                addTodo={props.addTodo} />\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TransitionsModal from \"../Modal/Modal.component\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import AddIcon from \"@material-ui/icons/Add\";\n\nimport './Header.styles.scss';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     \"& > *\": {\n//       margin: theme.spacing(1),\n//     },\n//   },\n// }));\n\nconst Header = (props) => {\n    return (\n      <div className=\"header\">\n        <h1>Your ToDo Manager</h1>\n      </div>\n    );}\n\nexport default Header;\n\n        // <TransitionsModal\n        //   addTodo={props.addTodo}\n        //   modalOpen={props.modalOpen}\n        //   handleOpen={props.handleOpen}\n        //   handleClose={props.handleClose}\n        // />;\n","import React, { useState, useEffect } from 'react';\n\nimport DatePicker from '../DatePicker/DatePicker.component';\nimport TextField from '../TextField/TextField.component';\nimport SelectField from '../SelectField/SelectField.component';\nimport Button from '../Button/Button.component';\n\nimport './EditArea.styles.scss';\n\nconst EditArea = (props) => {\n    const [edit, setEdit] = \n    useState({\n      dueDate: \"\",\n      name: \"\",\n      priority: \"\",\n      // id: \"\",\n    });\n\n    // useEffect(()=>{\n    //   setEdit(props.todoList);\n    //   console.log(\"editArea\", props.todoList);\n    // }, [])\n\n    useEffect(()=>{\n      let newTodoList = props.todoList;\n      let editIndex = newTodoList.findIndex(\n        (todo) => todo.id == props.editTodoId\n      );\n      setEdit(newTodoList[editIndex]);\n      // console.log(props.editTodoId);\n      // console.log(newTodoList);\n      // console.log(editIndex);\n    }, [])\n\n    const updateHandler = (edit) => {\n      // let todoId = event.target.closest(\"div\").closest(\"storeTodoId\");\n      // console.log(todoId);\n      props.editTodo(edit, props.editTodoId);\n    }\n\n    const onChangeHandler = (event) => {\n        const {value, name} = event.target;\n\n        setEdit({...edit, [name]: value});\n    }\n\n    const getValueHandler = (name, value) => {\n        setEdit({ ...edit, [name]: value });\n    }\n\n    // const setId = () => {        \n    //     const id = new Date().getTime();\n    //     setEdit({ ...edit, id: id });\n    // }\n\n    // useEffect(() => {\n    //     console.log(input);\n    // }, [input])\n\n    return (\n      <div className=\"editArea\">\n        <DatePicker change={getValueHandler} value={edit.dueDate} />\n        <TextField change={onChangeHandler} value={edit.name} />\n        <SelectField change={onChangeHandler} value={edit.priority} />\n        <Button\n          click={updateHandler}\n          todo={edit}\n          text=\"Edit\"\n          editTodoId={props.editTodoId}\n        />\n      </div>\n    );\n}\n\nexport default EditArea;","import React from \"react\";\nimport EditArea from '../EditArea/EditArea.component';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid skyblue\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function EditModal(props) {\n  const classes = useStyles();\n  const open = props.editModalOpen;\n\n  return (\n    <div className=\"storeTodoId\" data-todoid={props.todoId}>\n      <IconButton aria-label=\"delete\" onClick={props.handleEditOpen}>\n        <EditIcon />\n      </IconButton>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={props.handleEditClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Edit Your Duty</h2>\n            <div id=\"transition-modal-description\">\n              <EditArea\n                todoList={props.todoList}\n                editTodo={props.editTodo}\n                editTodoId={props.editTodoId}\n              />\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditModal from \"../EditModal/EditModal.component\";\n\nimport './InteractiveList.styles.scss';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752,\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  title: {\n    margin: theme.spacing(4, 0, 2),\n  },\n  div: {\n    margin: \"1rem auto\",\n    padding: \"0 1rem\",\n        ['@media (min-width:600px)']: {\n      width: '80%',\n      maxWidth: \"500px\"\n    }\n  },\n  listItem: {\n    \"-webkit-box-shadow\": \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    \"-moz-box-shadow\": \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    \"box-shadow\": \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    \"border-radius\": \"5px\"\n  }\n//   editButton: {\n//       backgroundColor: \"rgba(0, 0, 0, 0.54)\",\n//       color: \"white\"\n//   }\n}));\n\nexport default function InteractiveList(props) {\n  const classes = useStyles();\n  const [dense, setDense] = React.useState(false);\n  const [secondary, setSecondary] = React.useState(false);\n\n  const todoList = [...props.todoList];\n//   const deleteTodo = props.deleteTodo;\n\n  return (\n    <Grid className={classes.div} item xs={12} md={6}>\n      <div className={classes.demo}>\n      {\n          todoList.length ?\n            todoList.map((todo, index) => {\n                const date =\n                  todo.dueDate.getDate() < 10\n                    ? \"0\" + todo.dueDate.getDate()\n                    : todo.dueDate.getDate()\n                ;\n                const month =\n                  todo.dueDate.getMonth() + 1 < 10\n                    ? \"0\" + (todo.dueDate.getMonth() + 1)\n                    : todo.dueDate.getMonth() + 1\n                ;\n                const year = todo.dueDate.getFullYear();\n\n                let priority;\n                switch(todo.priority) {\n                    case 1:\n                        priority = \"A\";\n                        break;\n                    case 2:\n                        priority = \"B\";\n                        break;\n                    case 3:\n                        priority = \"C\";\n                        break;\n                    case 4:\n                        priority = \"D\";\n                        break;\n                    default:\n                        break;\n                }\n\n                // console.log(todo.id);\n\n                return (\n                  <List dense={dense} key={todo.id}>\n                    <ListItem className={classes.listItem}>\n                      <EditModal\n                        todoId={todo.id}\n                        todoList={todoList}\n                        editModalOpen={props.editModalOpen}\n                        editTodo={props.editTodo}\n                        editTodoId={props.editTodoId}\n                        handleEditOpen={props.handleEditOpen}\n                        handleEditClose={props.handleEditClose}\n                      />\n\n                      <ListItemText\n                        primary={\n                          <p>\n                            {month}/{date}/{year} - {todo.name} - {priority}\n                          </p>\n                        }\n                        secondary={secondary ? \"Secondary text\" : null}\n                      />\n                      <ListItemSecondaryAction>\n                        <IconButton\n                          edge=\"end\"\n                          aria-label=\"delete\"\n                          onClick={() => props.deleteTodo(index)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  </List>\n                );\n          }): null\n      }\n      </div>\n    </Grid>\n  );\n}\n\n        // <List dense={dense}>\n        //   <ListItem>\n            // <ListItemAvatar>\n            //   <Avatar>\n            //     <EditIcon />\n            //   </Avatar>\n            // </ListItemAvatar>\n        //     <ListItemText\n        //       primary=\"Single-line item\"\n        //       secondary={secondary ? \"Secondary text\" : null}\n        //     />\n        //     <ListItemSecondaryAction>\n        //       <IconButton edge=\"end\" aria-label=\"delete\">\n        //         <DeleteIcon />\n        //       </IconButton>\n        //     </ListItemSecondaryAction>\n        //   </ListItem>\n        // </List>;\n\n","import React from 'react';\n\nimport './NoTodo.styles.scss';\n\nconst NoTodo = () => {\n    return (\n        <div className=\"noTodoDiv\">\n            <p>There's no todo yet.</p>\n            <p>Add what you will do!!</p>\n        </div>\n    )\n}\n\nexport default NoTodo;","import React from 'react';\n\nimport InteractiveList from '../InteractiveList/InteractiveList.component';\nimport NoTodo from '../NoTodo/NoTodoï¼Žcomponent';\n\nimport './OutputArea.styles.scss';\n\nconst OutputArea = (props) => {\n  return (\n    <div className=\"outputArea\">\n      {props.todoList.length > 0 ? (\n        <InteractiveList\n          todoList={props.todoList}\n          editTodo={props.editTodo}\n          editTodoId={props.editTodoId}\n          deleteTodo={props.deleteTodo}\n          editModalOpen={props.editModalOpen}\n          handleEditOpen={props.handleEditOpen}\n          handleEditClose={props.handleEditClose}\n        />\n      ) : (\n        <NoTodo />\n      )}\n    </div>\n  );\n};\n\nexport default OutputArea;\n\n    //   <ul>\n    //     <li>\n    //       <span className=\"outputDate\">2020/09/30</span>\n    //       <span className=\"outputName\">Shopping</span>\n    //       <span className=\"outputPrio\">B</span>\n    //       <span>x</span>\n    //     </li>\n    //   </ul>;\n","import React from 'react';\nimport './App.css';\n\nimport Header from './components/Header/Header.component';\nimport OutputArea from './components/OutputArea/OutputArea.component';\nimport TransitionsModal from \"./components/Modal/Modal.component.jsx\";\n\nclass App extends React.Component {\n  state = {\n    todoList: [\n      {\n        dueDate: new Date(),\n        name: \"Sample data 1\",\n        priority: 1,\n        id: \"testkey\",\n      },\n      {\n        dueDate: new Date(),\n        name: \"Sample data 2\",\n        priority: 2,\n        id: \"afraer\",\n      },\n    ],\n    modalOpen: false,\n    editModalOpen: false,\n    editTodoId: \"\",\n  };\n\n  addTodo = (todo) => {\n    let todoInput = { ...todo, id: new Date().getTime() };\n\n    if (!todo.name || !todo.dueDate || !todo.priority) {\n      alert(\"Please fill in all fields!!\");\n    } else {\n      let todoList = this.state.todoList;\n      todoList.push(todoInput);\n      this.setState({ todoList: todoList });\n      this.handleClose();\n    }\n  };\n\n  editTodo = (todo, id) => {\n    if (!todo.name || !todo.dueDate || !todo.priority) {\n      alert(\"Please fill in all fields!!\");\n    } else {\n      let newTodoList = this.state.todoList;\n      let index = newTodoList.findIndex((todo) => todo.id == id);\n\n      console.log(\"index\", index, id);\n\n      let newTodo = { ...todo, id: id };\n\n      newTodoList[index] = newTodo;\n      this.setState({ todoList: newTodoList });\n      this.handleEditClose();\n    }\n  };\n\n  deleteTodo = (index) => {\n    let todoList = this.state.todoList;\n    todoList.splice(index, 1);\n    this.setState({ todoList: todoList });\n  };\n\n  handleOpen = () => {\n    this.setState({ modalOpen: true });\n  };\n\n  handleClose = () => {\n    this.setState({ modalOpen: false });\n  };\n\n  handleEditOpen = (event) => {\n    let todoId = event.target.closest(\".storeTodoId\").dataset.todoid;\n    console.log(todoId);\n    this.setState({\n      editModalOpen: true,\n      editTodoId: todoId,\n    });\n  };\n\n  handleEditClose = () => {\n    this.setState({ editModalOpen: false });\n  };\n\n  componentDidUpdate() {\n    console.log(\"state update\");\n    console.log(...this.state.todoList);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n        // addTodo={this.addTodo}\n        // modalOpen={this.state.modalOpen}\n        // handleOpen={this.handleOpen}\n        // handleClose={this.handleClose}\n        />\n        <OutputArea\n          todoList={this.state.todoList}\n          editTodo={this.editTodo}\n          editTodoId={this.state.editTodoId}\n          deleteTodo={this.deleteTodo}\n          editModalOpen={this.state.editModalOpen}\n          handleEditOpen={this.handleEditOpen}\n          handleEditClose={this.handleEditClose}\n        />\n        <TransitionsModal\n          addTodo={this.addTodo}\n          modalOpen={this.state.modalOpen}\n          handleOpen={this.handleOpen}\n          handleClose={this.handleClose}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n        // <InputArea addTodo={this.addTodo} />;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}